{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\source\\\\repos\\\\TypeScript\\\\src\\\\util\\\\auth.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport const login = ({\n  token\n}) => {\n  cookie.set('token', token, {\n    expires: 1\n  });\n  Router.push('/tasks');\n};\nexport const auth = ctx => {\n  const {\n    token\n  } = nextCookie(ctx); // If there's no token, it means the user is not logged in.\n\n  if (!token) {\n    if (true) {\n      var _ctx$res, _ctx$res2;\n\n      (_ctx$res = ctx.res) === null || _ctx$res === void 0 ? void 0 : _ctx$res.writeHead(302, {\n        Location: '/login'\n      });\n      (_ctx$res2 = ctx.res) === null || _ctx$res2 === void 0 ? void 0 : _ctx$res2.end();\n    } else {\n      Router.push('/login');\n    }\n  }\n\n  return token;\n};\nexport const logout = () => {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', Date.now().toString());\n  Router.push('/login');\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps, {\n      token\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["C:/Users/lenovo/source/repos/TypeScript/src/util/auth.tsx"],"names":["React","Router","nextCookie","cookie","login","token","set","expires","push","auth","ctx","res","writeHead","Location","end","logout","remove","window","localStorage","setItem","Date","now","toString","withAuthSync","WrappedComponent","Wrapper","props","getInitialProps","componentProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAQA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC/CF,EAAAA,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAA3B;AACAN,EAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD,CAHM;AAKP,OAAO,MAAMC,IAAI,GAAIC,GAAD,IAA0B;AAC5C,QAAM;AAAEL,IAAAA;AAAF,MAAYH,UAAU,CAACQ,GAAD,CAA5B,CAD4C,CAG5C;;AACA,MAAI,CAACL,KAAL,EAAY;AACV,cAAmC;AAAA;;AACjC,kBAAAK,GAAG,CAACC,GAAJ,sDAASC,SAAT,CAAmB,GAAnB,EAAwB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AACA,mBAAAH,GAAG,CAACC,GAAJ,wDAASG,GAAT;AACD,KAHD,MAGO;AACLb,MAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD;AACF;;AAED,SAAOH,KAAP;AACD,CAdM;AAgBP,OAAO,MAAMU,MAAM,GAAG,MAAM;AAC1BZ,EAAAA,MAAM,CAACa,MAAP,CAAc,OAAd,EAD0B,CAE1B;;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCC,IAAI,CAACC,GAAL,GAAWC,QAAX,EAAtC;AACArB,EAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMe,YAAY,GAAIC,gBAAD,IAAqC;AAC/D,QAAMC,OAAiB,GAAGC,KAAK,IAAI;AACjC,WAAO,MAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;;AAIAD,EAAAA,OAAO,CAACE,eAAR,GAA0B,MAAMjB,GAAN,IAAa;AACrC,UAAML,KAAK,GAAGI,IAAI,CAACC,GAAD,CAAlB;AAEA,UAAMkB,cAAc,GAClBJ,gBAAgB,CAACG,eAAjB,KAAqC,MAAMH,gBAAgB,CAACG,eAAjB,CAAiCjB,GAAjC,CAA3C,CADF;AAGA,6BAAYkB,cAAZ;AAA4BvB,MAAAA;AAA5B;AACD,GAPD;;AASA,SAAOoB,OAAP;AACD,CAfM","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport { NextPageContext, NextPage } from 'next';\n\nexport interface CookieProps {\n  [key: string]: string;\n  token: string;\n}\n\nexport const login = ({ token }: CookieProps) => {\n  cookie.set('token', token, { expires: 1 });\n  Router.push('/tasks');\n};\n\nexport const auth = (ctx: NextPageContext) => {\n  const { token } = nextCookie(ctx);\n\n  // If there's no token, it means the user is not logged in.\n  if (!token) {\n    if (typeof window === 'undefined') {\n      ctx.res?.writeHead(302, { Location: '/login' });\n      ctx.res?.end();\n    } else {\n      Router.push('/login');\n    }\n  }\n\n  return token;\n};\n\nexport const logout = () => {\n  cookie.remove('token');\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now().toString());\n  Router.push('/login');\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withAuthSync = (WrappedComponent: NextPage<any>) => {\n  const Wrapper: NextPage = props => {\n    return <WrappedComponent {...props} />;\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n\n    const componentProps =\n      WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n\n    return { ...componentProps, token };\n  };\n\n  return Wrapper;\n};\n"]},"metadata":{},"sourceType":"module"}